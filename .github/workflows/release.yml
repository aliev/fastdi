name: Build Wheels and Publish

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux
            os: ubuntu-latest
            python: "3.11"
            arch_env: CIBW_ARCHS_LINUX
            archs: "x86_64 aarch64"
            qemu: "1"
          - platform: macos
            os: macos-13
            python: "3.11"
            arch_env: CIBW_ARCHS_MACOS
            archs: "universal2"
            qemu: "0"
          - platform: windows
            os: windows-latest
            python: "3.11"
            arch_env: CIBW_ARCHS_WINDOWS
            archs: "AMD64"
            qemu: "0"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel==2.19.1 maturin

      - name: Build wheels
        run: cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-*"
          CIBW_SKIP: "pp*-*"
          CIBW_BUILD_FRONTEND: "maturin"
          CIBW_MATURIN_ARGS: "--release"
          CIBW_MANYLINUX_X86_64: "manylinux_2_28"
          CIBW_MANYLINUX_AARCH64: "manylinux_2_28"
          CIBW_MANYLINUX_PYPY_X86_64: "manylinux_2_28"
          CIBW_MANYLINUX_PYPY_AARCH64: "manylinux_2_28"
          CIBW_QEMU: ${{ matrix.qemu }}
          ${{ matrix.arch_env }}: ${{ matrix.archs }}

      - name: Upload wheels artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform }}
          path: dist

  sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install maturin
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Build source distribution
        run: maturin sdist --out dist

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs:
      - build-wheels
      - sdist
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: List artifacts
        run: ls -R dist

      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist
          skip-existing: true
